// source: client/src/components/grpc/LoginService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.LoginService.Request_UserInfo', null, global);
goog.exportSymbol('proto.LoginService.Response_LoginUserInfo', null, global);
goog.exportSymbol('proto.LoginService.Table_UserInfo2', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LoginService.Table_UserInfo2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LoginService.Table_UserInfo2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LoginService.Table_UserInfo2.displayName = 'proto.LoginService.Table_UserInfo2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LoginService.Response_LoginUserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.LoginService.Response_LoginUserInfo.repeatedFields_, null);
};
goog.inherits(proto.LoginService.Response_LoginUserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LoginService.Response_LoginUserInfo.displayName = 'proto.LoginService.Response_LoginUserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LoginService.Request_UserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LoginService.Request_UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LoginService.Request_UserInfo.displayName = 'proto.LoginService.Request_UserInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LoginService.Table_UserInfo2.prototype.toObject = function(opt_includeInstance) {
  return proto.LoginService.Table_UserInfo2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LoginService.Table_UserInfo2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Table_UserInfo2.toObject = function(includeInstance, msg) {
  var f, obj = {
    companycode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    companyname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    primeflag: jspb.Message.getFieldWithDefault(msg, 3, ""),
    trendflag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sociallisteningflag: jspb.Message.getFieldWithDefault(msg, 5, ""),
    onlineretailerflag: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LoginService.Table_UserInfo2}
 */
proto.LoginService.Table_UserInfo2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LoginService.Table_UserInfo2;
  return proto.LoginService.Table_UserInfo2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LoginService.Table_UserInfo2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LoginService.Table_UserInfo2}
 */
proto.LoginService.Table_UserInfo2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimeflag(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrendflag(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSociallisteningflag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOnlineretailerflag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LoginService.Table_UserInfo2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LoginService.Table_UserInfo2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LoginService.Table_UserInfo2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Table_UserInfo2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanycode();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrimeflag();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTrendflag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSociallisteningflag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOnlineretailerflag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 CompanyCode = 1;
 * @return {number}
 */
proto.LoginService.Table_UserInfo2.prototype.getCompanycode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setCompanycode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string CompanyName = 2;
 * @return {string}
 */
proto.LoginService.Table_UserInfo2.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PrimeFlag = 3;
 * @return {string}
 */
proto.LoginService.Table_UserInfo2.prototype.getPrimeflag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setPrimeflag = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string TrendFlag = 4;
 * @return {string}
 */
proto.LoginService.Table_UserInfo2.prototype.getTrendflag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setTrendflag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string SocialListeningFlag = 5;
 * @return {string}
 */
proto.LoginService.Table_UserInfo2.prototype.getSociallisteningflag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setSociallisteningflag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string OnlineRetailerFlag = 6;
 * @return {string}
 */
proto.LoginService.Table_UserInfo2.prototype.getOnlineretailerflag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Table_UserInfo2} returns this
 */
proto.LoginService.Table_UserInfo2.prototype.setOnlineretailerflag = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.LoginService.Response_LoginUserInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LoginService.Response_LoginUserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.LoginService.Response_LoginUserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LoginService.Response_LoginUserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Response_LoginUserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userinfoList: jspb.Message.toObjectList(msg.getUserinfoList(),
    proto.LoginService.Table_UserInfo2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LoginService.Response_LoginUserInfo}
 */
proto.LoginService.Response_LoginUserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LoginService.Response_LoginUserInfo;
  return proto.LoginService.Response_LoginUserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LoginService.Response_LoginUserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LoginService.Response_LoginUserInfo}
 */
proto.LoginService.Response_LoginUserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.LoginService.Table_UserInfo2;
      reader.readMessage(value,proto.LoginService.Table_UserInfo2.deserializeBinaryFromReader);
      msg.addUserinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LoginService.Response_LoginUserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LoginService.Response_LoginUserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LoginService.Response_LoginUserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Response_LoginUserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.LoginService.Table_UserInfo2.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.LoginService.Response_LoginUserInfo.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Response_LoginUserInfo} returns this
 */
proto.LoginService.Response_LoginUserInfo.prototype.setErrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.LoginService.Response_LoginUserInfo.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Response_LoginUserInfo} returns this
 */
proto.LoginService.Response_LoginUserInfo.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_UserInfo2 Userinfo = 3;
 * @return {!Array<!proto.LoginService.Table_UserInfo2>}
 */
proto.LoginService.Response_LoginUserInfo.prototype.getUserinfoList = function() {
  return /** @type{!Array<!proto.LoginService.Table_UserInfo2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.LoginService.Table_UserInfo2, 3));
};


/**
 * @param {!Array<!proto.LoginService.Table_UserInfo2>} value
 * @return {!proto.LoginService.Response_LoginUserInfo} returns this
*/
proto.LoginService.Response_LoginUserInfo.prototype.setUserinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.LoginService.Table_UserInfo2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.LoginService.Table_UserInfo2}
 */
proto.LoginService.Response_LoginUserInfo.prototype.addUserinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.LoginService.Table_UserInfo2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.LoginService.Response_LoginUserInfo} returns this
 */
proto.LoginService.Response_LoginUserInfo.prototype.clearUserinfoList = function() {
  return this.setUserinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LoginService.Request_UserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.LoginService.Request_UserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LoginService.Request_UserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Request_UserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userpassword: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LoginService.Request_UserInfo}
 */
proto.LoginService.Request_UserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LoginService.Request_UserInfo;
  return proto.LoginService.Request_UserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LoginService.Request_UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LoginService.Request_UserInfo}
 */
proto.LoginService.Request_UserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserpassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LoginService.Request_UserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LoginService.Request_UserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LoginService.Request_UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoginService.Request_UserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserpassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.LoginService.Request_UserInfo.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Request_UserInfo} returns this
 */
proto.LoginService.Request_UserInfo.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string UserPassword = 2;
 * @return {string}
 */
proto.LoginService.Request_UserInfo.prototype.getUserpassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.LoginService.Request_UserInfo} returns this
 */
proto.LoginService.Request_UserInfo.prototype.setUserpassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.LoginService);
