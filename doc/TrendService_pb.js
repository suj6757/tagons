/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.TrendService.Request_Empty', null, global);
goog.exportSymbol('proto.TrendService.Request_Type1', null, global);
goog.exportSymbol('proto.TrendService.Request_Type2', null, global);
goog.exportSymbol('proto.TrendService.Request_Type3', null, global);
goog.exportSymbol('proto.TrendService.Response_ClickedGIBubble', null, global);
goog.exportSymbol('proto.TrendService.Response_ETrendAndFactor', null, global);
goog.exportSymbol('proto.TrendService.Response_GI', null, global);
goog.exportSymbol('proto.TrendService.Response_GITableBubble', null, global);
goog.exportSymbol('proto.TrendService.Response_PTrendAndFactor', null, global);
goog.exportSymbol('proto.TrendService.Response_Showroom', null, global);
goog.exportSymbol('proto.TrendService.Response_TotalCategory_List', null, global);
goog.exportSymbol('proto.TrendService.Response_XY_Type1', null, global);
goog.exportSymbol('proto.TrendService.Table_AllBubbleData', null, global);
goog.exportSymbol('proto.TrendService.Table_OneFloat', null, global);
goog.exportSymbol('proto.TrendService.Table_OneInt', null, global);
goog.exportSymbol('proto.TrendService.Table_ThreeCategory', null, global);
goog.exportSymbol('proto.TrendService.Table_ThreeInt', null, global);
goog.exportSymbol('proto.TrendService.Table_ThreeString', null, global);
goog.exportSymbol('proto.TrendService.Table_TwoURL', null, global);
goog.exportSymbol('proto.TrendService.Table_XYFactor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_XYFactor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_XYFactor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_XYFactor.displayName = 'proto.TrendService.Table_XYFactor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_XYFactor.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_XYFactor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_XYFactor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_XYFactor.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryUpper: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryLower: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pRIndex: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    riseFall: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_XYFactor}
 */
proto.TrendService.Table_XYFactor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_XYFactor;
  return proto.TrendService.Table_XYFactor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_XYFactor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_XYFactor}
 */
proto.TrendService.Table_XYFactor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryUpper(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryLower(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPRIndex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRiseFall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_XYFactor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_XYFactor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_XYFactor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_XYFactor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryUpper();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryLower();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPRIndex();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getRiseFall();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string Category_upper = 1;
 * @return {string}
 */
proto.TrendService.Table_XYFactor.prototype.getCategoryUpper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_XYFactor.prototype.setCategoryUpper = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Category_lower = 2;
 * @return {string}
 */
proto.TrendService.Table_XYFactor.prototype.getCategoryLower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Table_XYFactor.prototype.setCategoryLower = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double P_R_INDEX = 3;
 * @return {number}
 */
proto.TrendService.Table_XYFactor.prototype.getPRIndex = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.TrendService.Table_XYFactor.prototype.setPRIndex = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double RISE_FALL = 4;
 * @return {number}
 */
proto.TrendService.Table_XYFactor.prototype.getRiseFall = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.TrendService.Table_XYFactor.prototype.setRiseFall = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_OneFloat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_OneFloat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_OneFloat.displayName = 'proto.TrendService.Table_OneFloat';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_OneFloat.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_OneFloat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_OneFloat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_OneFloat.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_OneFloat}
 */
proto.TrendService.Table_OneFloat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_OneFloat;
  return proto.TrendService.Table_OneFloat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_OneFloat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_OneFloat}
 */
proto.TrendService.Table_OneFloat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_OneFloat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_OneFloat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_OneFloat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_OneFloat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.TrendService.Table_OneFloat.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_OneFloat.prototype.setDate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double Value = 2;
 * @return {number}
 */
proto.TrendService.Table_OneFloat.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.TrendService.Table_OneFloat.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_OneInt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_OneInt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_OneInt.displayName = 'proto.TrendService.Table_OneInt';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_OneInt.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_OneInt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_OneInt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_OneInt.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Table_OneInt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_OneInt;
  return proto.TrendService.Table_OneInt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_OneInt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Table_OneInt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_OneInt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_OneInt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_OneInt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_OneInt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.TrendService.Table_OneInt.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_OneInt.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 Value = 2;
 * @return {number}
 */
proto.TrendService.Table_OneInt.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.TrendService.Table_OneInt.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_TwoURL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_TwoURL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_TwoURL.displayName = 'proto.TrendService.Table_TwoURL';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_TwoURL.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_TwoURL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_TwoURL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_TwoURL.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageurl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    siteurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_TwoURL}
 */
proto.TrendService.Table_TwoURL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_TwoURL;
  return proto.TrendService.Table_TwoURL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_TwoURL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_TwoURL}
 */
proto.TrendService.Table_TwoURL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageurl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_TwoURL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_TwoURL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_TwoURL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_TwoURL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSiteurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ImageURL = 1;
 * @return {string}
 */
proto.TrendService.Table_TwoURL.prototype.getImageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_TwoURL.prototype.setImageurl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string SiteURL = 2;
 * @return {string}
 */
proto.TrendService.Table_TwoURL.prototype.getSiteurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Table_TwoURL.prototype.setSiteurl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_ThreeString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_ThreeString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_ThreeString.displayName = 'proto.TrendService.Table_ThreeString';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_ThreeString.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_ThreeString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_ThreeString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeString.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, 0),
    purchasefactor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    satisfactionfactor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dissatisfactionfactor: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_ThreeString}
 */
proto.TrendService.Table_ThreeString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_ThreeString;
  return proto.TrendService.Table_ThreeString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_ThreeString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_ThreeString}
 */
proto.TrendService.Table_ThreeString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurchasefactor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSatisfactionfactor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDissatisfactionfactor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_ThreeString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_ThreeString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_ThreeString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPurchasefactor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSatisfactionfactor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDissatisfactionfactor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 Rank = 1;
 * @return {number}
 */
proto.TrendService.Table_ThreeString.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.TrendService.Table_ThreeString.prototype.setRank = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string PurchaseFactor = 2;
 * @return {string}
 */
proto.TrendService.Table_ThreeString.prototype.getPurchasefactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeString.prototype.setPurchasefactor = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string SatisfactionFactor = 3;
 * @return {string}
 */
proto.TrendService.Table_ThreeString.prototype.getSatisfactionfactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeString.prototype.setSatisfactionfactor = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string DisSatisfactionFactor = 4;
 * @return {string}
 */
proto.TrendService.Table_ThreeString.prototype.getDissatisfactionfactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeString.prototype.setDissatisfactionfactor = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_ThreeCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_ThreeCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_ThreeCategory.displayName = 'proto.TrendService.Table_ThreeCategory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_ThreeCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_ThreeCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_ThreeCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    category1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category2: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category3: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_ThreeCategory}
 */
proto.TrendService.Table_ThreeCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_ThreeCategory;
  return proto.TrendService.Table_ThreeCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_ThreeCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_ThreeCategory}
 */
proto.TrendService.Table_ThreeCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory3(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_ThreeCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_ThreeCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_ThreeCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory3();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string Category1 = 1;
 * @return {string}
 */
proto.TrendService.Table_ThreeCategory.prototype.getCategory1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeCategory.prototype.setCategory1 = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Category2 = 2;
 * @return {string}
 */
proto.TrendService.Table_ThreeCategory.prototype.getCategory2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeCategory.prototype.setCategory2 = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Category3 = 3;
 * @return {string}
 */
proto.TrendService.Table_ThreeCategory.prototype.getCategory3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeCategory.prototype.setCategory3 = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_ThreeInt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Table_ThreeInt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_ThreeInt.displayName = 'proto.TrendService.Table_ThreeInt';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_ThreeInt.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_ThreeInt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_ThreeInt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeInt.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pgi: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sgi: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dgi: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_ThreeInt}
 */
proto.TrendService.Table_ThreeInt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_ThreeInt;
  return proto.TrendService.Table_ThreeInt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_ThreeInt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_ThreeInt}
 */
proto.TrendService.Table_ThreeInt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPgi(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSgi(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDgi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_ThreeInt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_ThreeInt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_ThreeInt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_ThreeInt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPgi();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSgi();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDgi();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string Category = 1;
 * @return {string}
 */
proto.TrendService.Table_ThreeInt.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_ThreeInt.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 PGI = 2;
 * @return {number}
 */
proto.TrendService.Table_ThreeInt.prototype.getPgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.TrendService.Table_ThreeInt.prototype.setPgi = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 SGI = 3;
 * @return {number}
 */
proto.TrendService.Table_ThreeInt.prototype.getSgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.TrendService.Table_ThreeInt.prototype.setSgi = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 DGI = 4;
 * @return {number}
 */
proto.TrendService.Table_ThreeInt.prototype.getDgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.TrendService.Table_ThreeInt.prototype.setDgi = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Request_Type1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Request_Type1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Request_Type1.displayName = 'proto.TrendService.Request_Type1';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Request_Type1.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Request_Type1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Request_Type1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type1.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromdate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    todate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category1: jspb.Message.getFieldWithDefault(msg, 3, ""),
    category2: jspb.Message.getFieldWithDefault(msg, 4, ""),
    category3: jspb.Message.getFieldWithDefault(msg, 5, ""),
    keyword: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Request_Type1}
 */
proto.TrendService.Request_Type1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Request_Type1;
  return proto.TrendService.Request_Type1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Request_Type1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Request_Type1}
 */
proto.TrendService.Request_Type1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromdate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTodate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory1(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory2(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory3(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Request_Type1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Request_Type1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Request_Type1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromdate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTodate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory1();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategory2();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategory3();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string FromDate = 1;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getFromdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setFromdate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ToDate = 2;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getTodate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setTodate = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Category1 = 3;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getCategory1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setCategory1 = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Category2 = 4;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getCategory2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setCategory2 = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Category3 = 5;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getCategory3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setCategory3 = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Keyword = 6;
 * @return {string}
 */
proto.TrendService.Request_Type1.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type1.prototype.setKeyword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Request_Type2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Request_Type2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Request_Type2.displayName = 'proto.TrendService.Request_Type2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Request_Type2.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Request_Type2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Request_Type2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type2.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromdate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    todate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category1: jspb.Message.getFieldWithDefault(msg, 3, ""),
    category2: jspb.Message.getFieldWithDefault(msg, 4, ""),
    category3: jspb.Message.getFieldWithDefault(msg, 5, ""),
    keyword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    categoryUpper: jspb.Message.getFieldWithDefault(msg, 7, ""),
    name: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Request_Type2}
 */
proto.TrendService.Request_Type2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Request_Type2;
  return proto.TrendService.Request_Type2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Request_Type2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Request_Type2}
 */
proto.TrendService.Request_Type2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromdate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTodate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory1(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory2(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory3(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryUpper(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Request_Type2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Request_Type2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Request_Type2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromdate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTodate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory1();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategory2();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategory3();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCategoryUpper();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string FromDate = 1;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getFromdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setFromdate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ToDate = 2;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getTodate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setTodate = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Category1 = 3;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getCategory1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setCategory1 = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Category2 = 4;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getCategory2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setCategory2 = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Category3 = 5;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getCategory3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setCategory3 = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Keyword = 6;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setKeyword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Category_upper = 7;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getCategoryUpper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setCategoryUpper = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Name = 8;
 * @return {string}
 */
proto.TrendService.Request_Type2.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type2.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Request_Type3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Request_Type3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Request_Type3.displayName = 'proto.TrendService.Request_Type3';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Request_Type3.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Request_Type3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Request_Type3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type3.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromdate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    todate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category1: jspb.Message.getFieldWithDefault(msg, 3, ""),
    category2: jspb.Message.getFieldWithDefault(msg, 4, ""),
    category3: jspb.Message.getFieldWithDefault(msg, 5, ""),
    keyword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clicked: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Request_Type3}
 */
proto.TrendService.Request_Type3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Request_Type3;
  return proto.TrendService.Request_Type3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Request_Type3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Request_Type3}
 */
proto.TrendService.Request_Type3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromdate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTodate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory1(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory2(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory3(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClicked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Request_Type3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Request_Type3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Request_Type3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Type3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromdate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTodate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory1();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategory2();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategory3();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClicked();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string FromDate = 1;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getFromdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setFromdate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ToDate = 2;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getTodate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setTodate = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Category1 = 3;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getCategory1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setCategory1 = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Category2 = 4;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getCategory2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setCategory2 = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Category3 = 5;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getCategory3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setCategory3 = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Keyword = 6;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setKeyword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Clicked = 7;
 * @return {string}
 */
proto.TrendService.Request_Type3.prototype.getClicked = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.TrendService.Request_Type3.prototype.setClicked = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Request_Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TrendService.Request_Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Request_Empty.displayName = 'proto.TrendService.Request_Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Request_Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Request_Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Request_Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Request_Empty}
 */
proto.TrendService.Request_Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Request_Empty;
  return proto.TrendService.Request_Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Request_Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Request_Empty}
 */
proto.TrendService.Request_Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Request_Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Request_Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Request_Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Request_Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_Showroom = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_Showroom.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_Showroom, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_Showroom.displayName = 'proto.TrendService.Response_Showroom';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_Showroom.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_Showroom.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_Showroom.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_Showroom} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_Showroom.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    urlList: jspb.Message.toObjectList(msg.getUrlList(),
    proto.TrendService.Table_TwoURL.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_Showroom}
 */
proto.TrendService.Response_Showroom.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_Showroom;
  return proto.TrendService.Response_Showroom.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_Showroom} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_Showroom}
 */
proto.TrendService.Response_Showroom.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_TwoURL;
      reader.readMessage(value,proto.TrendService.Table_TwoURL.deserializeBinaryFromReader);
      msg.addUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_Showroom.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_Showroom.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_Showroom} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_Showroom.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrlList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_TwoURL.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_Showroom.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_Showroom.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_Showroom.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_Showroom.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_TwoURL URL = 3;
 * @return {!Array<!proto.TrendService.Table_TwoURL>}
 */
proto.TrendService.Response_Showroom.prototype.getUrlList = function() {
  return /** @type{!Array<!proto.TrendService.Table_TwoURL>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_TwoURL, 3));
};


/** @param {!Array<!proto.TrendService.Table_TwoURL>} value */
proto.TrendService.Response_Showroom.prototype.setUrlList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_TwoURL=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_TwoURL}
 */
proto.TrendService.Response_Showroom.prototype.addUrl = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_TwoURL, opt_index);
};


proto.TrendService.Response_Showroom.prototype.clearUrlList = function() {
  this.setUrlList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_XY_Type1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_XY_Type1.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_XY_Type1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_XY_Type1.displayName = 'proto.TrendService.Response_XY_Type1';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_XY_Type1.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_XY_Type1.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_XY_Type1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_XY_Type1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_XY_Type1.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.TrendService.Table_XYFactor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_XY_Type1}
 */
proto.TrendService.Response_XY_Type1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_XY_Type1;
  return proto.TrendService.Response_XY_Type1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_XY_Type1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_XY_Type1}
 */
proto.TrendService.Response_XY_Type1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_XYFactor;
      reader.readMessage(value,proto.TrendService.Table_XYFactor.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_XY_Type1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_XY_Type1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_XY_Type1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_XY_Type1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_XYFactor.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_XY_Type1.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_XY_Type1.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_XY_Type1.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_XY_Type1.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_XYFactor Data = 3;
 * @return {!Array<!proto.TrendService.Table_XYFactor>}
 */
proto.TrendService.Response_XY_Type1.prototype.getDataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_XYFactor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_XYFactor, 3));
};


/** @param {!Array<!proto.TrendService.Table_XYFactor>} value */
proto.TrendService.Response_XY_Type1.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_XYFactor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_XYFactor}
 */
proto.TrendService.Response_XY_Type1.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_XYFactor, opt_index);
};


proto.TrendService.Response_XY_Type1.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_PTrendAndFactor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_PTrendAndFactor.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_PTrendAndFactor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_PTrendAndFactor.displayName = 'proto.TrendService.Response_PTrendAndFactor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_PTrendAndFactor.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_PTrendAndFactor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_PTrendAndFactor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_PTrendAndFactor.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pretrendchange: jspb.Message.getFieldWithDefault(msg, 3, ""),
    trenddataList: jspb.Message.toObjectList(msg.getTrenddataList(),
    proto.TrendService.Table_OneFloat.toObject, includeInstance),
    sentimentfactordataList: jspb.Message.toObjectList(msg.getSentimentfactordataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance),
    brandfactordataList: jspb.Message.toObjectList(msg.getBrandfactordataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_PTrendAndFactor}
 */
proto.TrendService.Response_PTrendAndFactor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_PTrendAndFactor;
  return proto.TrendService.Response_PTrendAndFactor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_PTrendAndFactor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_PTrendAndFactor}
 */
proto.TrendService.Response_PTrendAndFactor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPretrendchange(value);
      break;
    case 4:
      var value = new proto.TrendService.Table_OneFloat;
      reader.readMessage(value,proto.TrendService.Table_OneFloat.deserializeBinaryFromReader);
      msg.addTrenddata(value);
      break;
    case 5:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addSentimentfactordata(value);
      break;
    case 6:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addBrandfactordata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_PTrendAndFactor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_PTrendAndFactor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_PTrendAndFactor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPretrendchange();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTrenddataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.TrendService.Table_OneFloat.serializeBinaryToWriter
    );
  }
  f = message.getSentimentfactordataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
  f = message.getBrandfactordataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PreTrendChange = 3;
 * @return {string}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getPretrendchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setPretrendchange = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Table_OneFloat TrendData = 4;
 * @return {!Array<!proto.TrendService.Table_OneFloat>}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getTrenddataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneFloat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneFloat, 4));
};


/** @param {!Array<!proto.TrendService.Table_OneFloat>} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setTrenddataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TrendService.Table_OneFloat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneFloat}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.addTrenddata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TrendService.Table_OneFloat, opt_index);
};


proto.TrendService.Response_PTrendAndFactor.prototype.clearTrenddataList = function() {
  this.setTrenddataList([]);
};


/**
 * repeated Table_OneInt SentimentFactorData = 5;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getSentimentfactordataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 5));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setSentimentfactordataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.addSentimentfactordata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Response_PTrendAndFactor.prototype.clearSentimentfactordataList = function() {
  this.setSentimentfactordataList([]);
};


/**
 * repeated Table_OneInt BrandFactorData = 6;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.getBrandfactordataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 6));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Response_PTrendAndFactor.prototype.setBrandfactordataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Response_PTrendAndFactor.prototype.addBrandfactordata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Response_PTrendAndFactor.prototype.clearBrandfactordataList = function() {
  this.setBrandfactordataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_ETrendAndFactor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_ETrendAndFactor.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_ETrendAndFactor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_ETrendAndFactor.displayName = 'proto.TrendService.Response_ETrendAndFactor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_ETrendAndFactor.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_ETrendAndFactor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_ETrendAndFactor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_ETrendAndFactor.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pretrendchange: jspb.Message.getFieldWithDefault(msg, 3, ""),
    trenddataList: jspb.Message.toObjectList(msg.getTrenddataList(),
    proto.TrendService.Table_OneFloat.toObject, includeInstance),
    productfactordataList: jspb.Message.toObjectList(msg.getProductfactordataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance),
    brandfactordataList: jspb.Message.toObjectList(msg.getBrandfactordataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_ETrendAndFactor}
 */
proto.TrendService.Response_ETrendAndFactor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_ETrendAndFactor;
  return proto.TrendService.Response_ETrendAndFactor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_ETrendAndFactor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_ETrendAndFactor}
 */
proto.TrendService.Response_ETrendAndFactor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPretrendchange(value);
      break;
    case 4:
      var value = new proto.TrendService.Table_OneFloat;
      reader.readMessage(value,proto.TrendService.Table_OneFloat.deserializeBinaryFromReader);
      msg.addTrenddata(value);
      break;
    case 5:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addProductfactordata(value);
      break;
    case 6:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addBrandfactordata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_ETrendAndFactor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_ETrendAndFactor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_ETrendAndFactor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPretrendchange();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTrenddataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.TrendService.Table_OneFloat.serializeBinaryToWriter
    );
  }
  f = message.getProductfactordataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
  f = message.getBrandfactordataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PreTrendChange = 3;
 * @return {string}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getPretrendchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setPretrendchange = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Table_OneFloat TrendData = 4;
 * @return {!Array<!proto.TrendService.Table_OneFloat>}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getTrenddataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneFloat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneFloat, 4));
};


/** @param {!Array<!proto.TrendService.Table_OneFloat>} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setTrenddataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TrendService.Table_OneFloat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneFloat}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.addTrenddata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TrendService.Table_OneFloat, opt_index);
};


proto.TrendService.Response_ETrendAndFactor.prototype.clearTrenddataList = function() {
  this.setTrenddataList([]);
};


/**
 * repeated Table_OneInt ProductFactorData = 5;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getProductfactordataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 5));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setProductfactordataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.addProductfactordata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Response_ETrendAndFactor.prototype.clearProductfactordataList = function() {
  this.setProductfactordataList([]);
};


/**
 * repeated Table_OneInt BrandFactorData = 6;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.getBrandfactordataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 6));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Response_ETrendAndFactor.prototype.setBrandfactordataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Response_ETrendAndFactor.prototype.addBrandfactordata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Response_ETrendAndFactor.prototype.clearBrandfactordataList = function() {
  this.setBrandfactordataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_GITableBubble = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_GITableBubble.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_GITableBubble, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_GITableBubble.displayName = 'proto.TrendService.Response_GITableBubble';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_GITableBubble.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_GITableBubble.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_GITableBubble.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_GITableBubble} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_GITableBubble.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tabledataList: jspb.Message.toObjectList(msg.getTabledataList(),
    proto.TrendService.Table_ThreeString.toObject, includeInstance),
    bubbledataList: jspb.Message.toObjectList(msg.getBubbledataList(),
    proto.TrendService.Table_ThreeInt.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_GITableBubble}
 */
proto.TrendService.Response_GITableBubble.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_GITableBubble;
  return proto.TrendService.Response_GITableBubble.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_GITableBubble} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_GITableBubble}
 */
proto.TrendService.Response_GITableBubble.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_ThreeString;
      reader.readMessage(value,proto.TrendService.Table_ThreeString.deserializeBinaryFromReader);
      msg.addTabledata(value);
      break;
    case 4:
      var value = new proto.TrendService.Table_ThreeInt;
      reader.readMessage(value,proto.TrendService.Table_ThreeInt.deserializeBinaryFromReader);
      msg.addBubbledata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_GITableBubble.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_GITableBubble.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_GITableBubble} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_GITableBubble.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTabledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_ThreeString.serializeBinaryToWriter
    );
  }
  f = message.getBubbledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.TrendService.Table_ThreeInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_GITableBubble.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_GITableBubble.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_GITableBubble.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_GITableBubble.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_ThreeString TableData = 3;
 * @return {!Array<!proto.TrendService.Table_ThreeString>}
 */
proto.TrendService.Response_GITableBubble.prototype.getTabledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_ThreeString>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_ThreeString, 3));
};


/** @param {!Array<!proto.TrendService.Table_ThreeString>} value */
proto.TrendService.Response_GITableBubble.prototype.setTabledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_ThreeString=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_ThreeString}
 */
proto.TrendService.Response_GITableBubble.prototype.addTabledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_ThreeString, opt_index);
};


proto.TrendService.Response_GITableBubble.prototype.clearTabledataList = function() {
  this.setTabledataList([]);
};


/**
 * repeated Table_ThreeInt BubbleData = 4;
 * @return {!Array<!proto.TrendService.Table_ThreeInt>}
 */
proto.TrendService.Response_GITableBubble.prototype.getBubbledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_ThreeInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_ThreeInt, 4));
};


/** @param {!Array<!proto.TrendService.Table_ThreeInt>} value */
proto.TrendService.Response_GITableBubble.prototype.setBubbledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TrendService.Table_ThreeInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_ThreeInt}
 */
proto.TrendService.Response_GITableBubble.prototype.addBubbledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TrendService.Table_ThreeInt, opt_index);
};


proto.TrendService.Response_GITableBubble.prototype.clearBubbledataList = function() {
  this.setBubbledataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_ClickedGIBubble = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_ClickedGIBubble.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_ClickedGIBubble, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_ClickedGIBubble.displayName = 'proto.TrendService.Response_ClickedGIBubble';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_ClickedGIBubble.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_ClickedGIBubble.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_ClickedGIBubble} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_ClickedGIBubble.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bubbledataList: jspb.Message.toObjectList(msg.getBubbledataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance),
    urlList: jspb.Message.toObjectList(msg.getUrlList(),
    proto.TrendService.Table_TwoURL.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_ClickedGIBubble}
 */
proto.TrendService.Response_ClickedGIBubble.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_ClickedGIBubble;
  return proto.TrendService.Response_ClickedGIBubble.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_ClickedGIBubble} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_ClickedGIBubble}
 */
proto.TrendService.Response_ClickedGIBubble.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addBubbledata(value);
      break;
    case 4:
      var value = new proto.TrendService.Table_TwoURL;
      reader.readMessage(value,proto.TrendService.Table_TwoURL.deserializeBinaryFromReader);
      msg.addUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_ClickedGIBubble.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_ClickedGIBubble} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_ClickedGIBubble.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBubbledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
  f = message.getUrlList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.TrendService.Table_TwoURL.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_ClickedGIBubble.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_ClickedGIBubble.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_OneInt BubbleData = 3;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.getBubbledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 3));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Response_ClickedGIBubble.prototype.setBubbledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.addBubbledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Response_ClickedGIBubble.prototype.clearBubbledataList = function() {
  this.setBubbledataList([]);
};


/**
 * repeated Table_TwoURL URL = 4;
 * @return {!Array<!proto.TrendService.Table_TwoURL>}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.getUrlList = function() {
  return /** @type{!Array<!proto.TrendService.Table_TwoURL>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_TwoURL, 4));
};


/** @param {!Array<!proto.TrendService.Table_TwoURL>} value */
proto.TrendService.Response_ClickedGIBubble.prototype.setUrlList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TrendService.Table_TwoURL=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_TwoURL}
 */
proto.TrendService.Response_ClickedGIBubble.prototype.addUrl = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TrendService.Table_TwoURL, opt_index);
};


proto.TrendService.Response_ClickedGIBubble.prototype.clearUrlList = function() {
  this.setUrlList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Table_AllBubbleData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Table_AllBubbleData.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Table_AllBubbleData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Table_AllBubbleData.displayName = 'proto.TrendService.Table_AllBubbleData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Table_AllBubbleData.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Table_AllBubbleData.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Table_AllBubbleData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Table_AllBubbleData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_AllBubbleData.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pgi: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sgi: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dgi: jspb.Message.getFieldWithDefault(msg, 4, 0),
    associatedbubbledataList: jspb.Message.toObjectList(msg.getAssociatedbubbledataList(),
    proto.TrendService.Table_OneInt.toObject, includeInstance),
    urlList: jspb.Message.toObjectList(msg.getUrlList(),
    proto.TrendService.Table_TwoURL.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Table_AllBubbleData}
 */
proto.TrendService.Table_AllBubbleData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Table_AllBubbleData;
  return proto.TrendService.Table_AllBubbleData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Table_AllBubbleData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Table_AllBubbleData}
 */
proto.TrendService.Table_AllBubbleData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPgi(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSgi(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDgi(value);
      break;
    case 5:
      var value = new proto.TrendService.Table_OneInt;
      reader.readMessage(value,proto.TrendService.Table_OneInt.deserializeBinaryFromReader);
      msg.addAssociatedbubbledata(value);
      break;
    case 6:
      var value = new proto.TrendService.Table_TwoURL;
      reader.readMessage(value,proto.TrendService.Table_TwoURL.deserializeBinaryFromReader);
      msg.addUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Table_AllBubbleData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Table_AllBubbleData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Table_AllBubbleData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Table_AllBubbleData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPgi();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSgi();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDgi();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAssociatedbubbledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.TrendService.Table_OneInt.serializeBinaryToWriter
    );
  }
  f = message.getUrlList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.TrendService.Table_TwoURL.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Category = 1;
 * @return {string}
 */
proto.TrendService.Table_AllBubbleData.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Table_AllBubbleData.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 PGI = 2;
 * @return {number}
 */
proto.TrendService.Table_AllBubbleData.prototype.getPgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.TrendService.Table_AllBubbleData.prototype.setPgi = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 SGI = 3;
 * @return {number}
 */
proto.TrendService.Table_AllBubbleData.prototype.getSgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.TrendService.Table_AllBubbleData.prototype.setSgi = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 DGI = 4;
 * @return {number}
 */
proto.TrendService.Table_AllBubbleData.prototype.getDgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.TrendService.Table_AllBubbleData.prototype.setDgi = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated Table_OneInt AssociatedBubbleData = 5;
 * @return {!Array<!proto.TrendService.Table_OneInt>}
 */
proto.TrendService.Table_AllBubbleData.prototype.getAssociatedbubbledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_OneInt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_OneInt, 5));
};


/** @param {!Array<!proto.TrendService.Table_OneInt>} value */
proto.TrendService.Table_AllBubbleData.prototype.setAssociatedbubbledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.TrendService.Table_OneInt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_OneInt}
 */
proto.TrendService.Table_AllBubbleData.prototype.addAssociatedbubbledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.TrendService.Table_OneInt, opt_index);
};


proto.TrendService.Table_AllBubbleData.prototype.clearAssociatedbubbledataList = function() {
  this.setAssociatedbubbledataList([]);
};


/**
 * repeated Table_TwoURL URL = 6;
 * @return {!Array<!proto.TrendService.Table_TwoURL>}
 */
proto.TrendService.Table_AllBubbleData.prototype.getUrlList = function() {
  return /** @type{!Array<!proto.TrendService.Table_TwoURL>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_TwoURL, 6));
};


/** @param {!Array<!proto.TrendService.Table_TwoURL>} value */
proto.TrendService.Table_AllBubbleData.prototype.setUrlList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.TrendService.Table_TwoURL=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_TwoURL}
 */
proto.TrendService.Table_AllBubbleData.prototype.addUrl = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.TrendService.Table_TwoURL, opt_index);
};


proto.TrendService.Table_AllBubbleData.prototype.clearUrlList = function() {
  this.setUrlList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_GI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_GI.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_GI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_GI.displayName = 'proto.TrendService.Response_GI';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_GI.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_GI.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_GI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_GI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_GI.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tabledataList: jspb.Message.toObjectList(msg.getTabledataList(),
    proto.TrendService.Table_ThreeString.toObject, includeInstance),
    bubbledataList: jspb.Message.toObjectList(msg.getBubbledataList(),
    proto.TrendService.Table_AllBubbleData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_GI}
 */
proto.TrendService.Response_GI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_GI;
  return proto.TrendService.Response_GI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_GI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_GI}
 */
proto.TrendService.Response_GI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_ThreeString;
      reader.readMessage(value,proto.TrendService.Table_ThreeString.deserializeBinaryFromReader);
      msg.addTabledata(value);
      break;
    case 4:
      var value = new proto.TrendService.Table_AllBubbleData;
      reader.readMessage(value,proto.TrendService.Table_AllBubbleData.deserializeBinaryFromReader);
      msg.addBubbledata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_GI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_GI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_GI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_GI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTabledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_ThreeString.serializeBinaryToWriter
    );
  }
  f = message.getBubbledataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.TrendService.Table_AllBubbleData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_GI.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_GI.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_GI.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_GI.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_ThreeString TableData = 3;
 * @return {!Array<!proto.TrendService.Table_ThreeString>}
 */
proto.TrendService.Response_GI.prototype.getTabledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_ThreeString>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_ThreeString, 3));
};


/** @param {!Array<!proto.TrendService.Table_ThreeString>} value */
proto.TrendService.Response_GI.prototype.setTabledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_ThreeString=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_ThreeString}
 */
proto.TrendService.Response_GI.prototype.addTabledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_ThreeString, opt_index);
};


proto.TrendService.Response_GI.prototype.clearTabledataList = function() {
  this.setTabledataList([]);
};


/**
 * repeated Table_AllBubbleData BubbleData = 4;
 * @return {!Array<!proto.TrendService.Table_AllBubbleData>}
 */
proto.TrendService.Response_GI.prototype.getBubbledataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_AllBubbleData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_AllBubbleData, 4));
};


/** @param {!Array<!proto.TrendService.Table_AllBubbleData>} value */
proto.TrendService.Response_GI.prototype.setBubbledataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.TrendService.Table_AllBubbleData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_AllBubbleData}
 */
proto.TrendService.Response_GI.prototype.addBubbledata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.TrendService.Table_AllBubbleData, opt_index);
};


proto.TrendService.Response_GI.prototype.clearBubbledataList = function() {
  this.setBubbledataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TrendService.Response_TotalCategory_List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.TrendService.Response_TotalCategory_List.repeatedFields_, null);
};
goog.inherits(proto.TrendService.Response_TotalCategory_List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TrendService.Response_TotalCategory_List.displayName = 'proto.TrendService.Response_TotalCategory_List';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.TrendService.Response_TotalCategory_List.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TrendService.Response_TotalCategory_List.prototype.toObject = function(opt_includeInstance) {
  return proto.TrendService.Response_TotalCategory_List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TrendService.Response_TotalCategory_List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_TotalCategory_List.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.TrendService.Table_ThreeCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TrendService.Response_TotalCategory_List}
 */
proto.TrendService.Response_TotalCategory_List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TrendService.Response_TotalCategory_List;
  return proto.TrendService.Response_TotalCategory_List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TrendService.Response_TotalCategory_List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TrendService.Response_TotalCategory_List}
 */
proto.TrendService.Response_TotalCategory_List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.TrendService.Table_ThreeCategory;
      reader.readMessage(value,proto.TrendService.Table_ThreeCategory.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TrendService.Response_TotalCategory_List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TrendService.Response_TotalCategory_List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TrendService.Response_TotalCategory_List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TrendService.Response_TotalCategory_List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.TrendService.Table_ThreeCategory.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ErrorCode = 1;
 * @return {string}
 */
proto.TrendService.Response_TotalCategory_List.prototype.getErrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.TrendService.Response_TotalCategory_List.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.TrendService.Response_TotalCategory_List.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.TrendService.Response_TotalCategory_List.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Table_ThreeCategory Data = 3;
 * @return {!Array<!proto.TrendService.Table_ThreeCategory>}
 */
proto.TrendService.Response_TotalCategory_List.prototype.getDataList = function() {
  return /** @type{!Array<!proto.TrendService.Table_ThreeCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.TrendService.Table_ThreeCategory, 3));
};


/** @param {!Array<!proto.TrendService.Table_ThreeCategory>} value */
proto.TrendService.Response_TotalCategory_List.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.TrendService.Table_ThreeCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.TrendService.Table_ThreeCategory}
 */
proto.TrendService.Response_TotalCategory_List.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TrendService.Table_ThreeCategory, opt_index);
};


proto.TrendService.Response_TotalCategory_List.prototype.clearDataList = function() {
  this.setDataList([]);
};


goog.object.extend(exports, proto.TrendService);
